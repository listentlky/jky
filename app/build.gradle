//import com.android.build.gradle.AppPlugin
//import com.android.build.gradle.LibraryPlugin
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
//    id 'kotlin-parcelize'
    id 'kotlin-android-extensions'
//    id 'android-aspectjx'
}

//apply plugin: 'kotlin-parcelize'

def time = "${new Date().format("yyyyMMdd")}"//
def codename = "5"//当日迭代号
final def log = project.logger
android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        configurations.all {
            resolutionStrategy { force 'androidx.core:core-ktx:1.6.0' }
        }
        applicationId "com.sribs.bdd"
        minSdkVersion  build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a', 'armeabi', 'arm64-v8a','x86','x86_64'
        }

//        kapt {
//            arguments {
//                arg("room.schemaLocation", "$projectDir/schemas")
//            }
//        }
//
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments += mapOf("room.schemaLocation" to "$projectDir/schemas")
//            }
//        }

//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
//            }
//        }
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildFeatures {
        viewBinding = true
    }

    sourceSets {
        main{
            jniLibs.srcDirs = ['libs']
        }
    }

    signingConfigs {
        config {
            storeFile file("app.keystore")
            storePassword "android"
            keyAlias "app"
            keyPassword "android"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
          //  minifyEnabled true
            shrinkResources false
            zipAlignEnabled true
            debuggable true
           // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            buildConfigField("int", "build_level", "1")
            buildConfigField("String","pgy","\"https://www.pgyer.com/U6EB\"")
            manifestPlaceholders = [
                    app_name:"@string/app_name",
            ]
        }
        debug {
            shrinkResources false
            zipAlignEnabled true
            debuggable true
            signingConfig signingConfigs.config
            buildConfigField("int", "build_level", "1")
            buildConfigField("String","pgy","\"https://www.pgyer.com/bRH7\"")
            manifestPlaceholders = [
                    app_name:"@string/app_name_test",
            ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


    applicationVariants.all {
        variant ->
            variant.outputs.all { output->
                outputFileName = variant.flavorName+"_v" + defaultConfig.versionName + "_" + buildType.name + ".apk"
                JavaCompile javaCompile = variant.javaCompileProvider.get()
                javaCompile.doLast {
                    String[] args = ["-showWeaveInfo",
                                     "-1.8",
                                     "-inpath", javaCompile.destinationDir.toString(),
                                     "-aspectpath", javaCompile.classpath.asPath,
                                     "-d", javaCompile.destinationDir.toString(),
                                     "-classpath", javaCompile.classpath.asPath,
                                     "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
                    log.debug "ajc args: " + Arrays.toString(args)

//                    def buildType = variant.buildType.name
//                    def buildType =  variant.flavorName + variant.buildType.name

                    def fullName = ""
                    output.name.tokenize('-').eachWithIndex { token, index ->
                        fullName = fullName + (index == 0 ? token : token.capitalize())
                    }
                    println(fullName)

                    String[] kotlinArgs = ["-showWeaveInfo",
                                           "-1.8",
                                           "-inpath", project.buildDir.path + "/tmp/kotlin-classes/" + fullName,
                                           "-aspectpath", javaCompile.classpath.asPath,
                                           "-d", project.buildDir.path + "/tmp/kotlin-classes/" + fullName,
                                           "-classpath", javaCompile.classpath.asPath,
                                           "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
                    MessageHandler handler = new MessageHandler(true)
                    new Main().run(args, handler)
                    new Main().run(kotlinArgs, handler)
                    for (IMessage message : handler.getMessages(null, true)) {
                        switch (message.getKind()) {
                            case IMessage.ABORT:
                            case IMessage.ERROR:
                            case IMessage.FAIL:
                                log.error message.message, message.thrown
                                break
                            case IMessage.WARNING:
                                log.warn message.message, message.thrown
                                break
                            case IMessage.INFO:
                                log.info message.message, message.thrown
                                break
                            case IMessage.DEBUG:
                                log.debug message.message, message.thrown
                                break
                        }
                    }
                }

            }
    }

    flavorDimensions "default"
    productFlavors {
        envBdd {
            dimension "default"
            applicationId "com.sribs.bdd"
            versionCode 1
            versionName "1." + time + "." + codename
            manifestPlaceholders = [
                app_name      : "@string/app_name",
                app_icon      : "@drawable/logo",
                build_flavor  : 0,
                PACKAGE_NAME  : applicationId,
                JSHARE_PKGNAME: applicationId,
                JPUSH_PKGNAME : applicationId,
//                    JPUSH_APPKEY  : "112fb1c0e0105434699bf74a", //JPush上注册的包名对应的appkey.
                JPUSH_APPKEY  : "7428e955da1796f69b373d70", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL : "bdd000", //渠道号（不能使用中文）
                TENCENT_APPID : "wx5b56fb5a2dea9843",//腾讯开放平台注册应用得到的 appId,哪怕用不到也得放在这,不然manifest会有merge错误
            ]
            buildConfigField("String", "start_img", "\"\"")//设置启动图
            buildConfigField("String", "app_icon", "\"logo\"")//设置app icon
        }

    }
    dexOptions {
        javaMaxHeapSize "8G"
    }

}
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
repositories {
    flatDir {
        dirs 'libs','../lib_opensource/libs'
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    //implementation(name:'BaiduLBS_AndroidSDK_Lib',ext:'aar')
    implementation project(':module_common')
    implementation project(':module_db')
    implementation project(':lib_opensource')
    implementation project(':lib_pdf')
    implementation project(':whiteboardlib')

    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.test.ext:junit-ktx:1.1.2'
    implementation project(path: ':lib_recycle')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.testng:testng:6.9.6'
//    implementation 'org.aspectj:aspectjrt:1.9.6'
    kapt deps.arouter.compiler
    implementation 'com.facebook.stetho:stetho:1.3.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.3.1'
    //RecyclerView
    implementation 'com.afollestad:recyclical:1.1.1'
    implementation 'com.afollestad:material-cab:2.0.1'
    //
    implementation "androidx.activity:activity-ktx:1.2.2"
    implementation "androidx.fragment:fragment-ktx:1.3.2"
//    implementation "com.github.guilhe.sharedprefs-ktx:converter-gson:${LATEST_VERSION}"
    //Permissions constructure
    implementation 'com.github.getActivity:XXPermissions:13.5'
    //Spinner
 //   implementation 'com.github.arcadefire:nice-spinner:1.3.4'

    //float action button
    implementation 'com.github.wangfeng19930909:DragFloatingActionButton:1.0.1'

    //custom spinner dependency
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    api "com.github.skydoves:powermenu:2.1.9"
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
}


